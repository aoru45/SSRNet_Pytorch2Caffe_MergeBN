layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 64
      dim: 64
    }
  }
}
layer {
  name: "x_layer1.0_conv"
  type: "Convolution"
  bottom: "data"
  top: "x_layer1_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "x_layer1.1_bn"
  type: "BatchNorm"
  bottom: "x_layer1_0_conv"
  top: "x_layer1_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer1.1_scale"
  type: "Scale"
  bottom: "x_layer1_1_bn"
  top: "x_layer1_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer1_2"
  type: "ReLU"
  bottom: "x_layer1_1_scale"
  top: "x_layer1_2"
}
layer {
  name: "x_layer1_3"
  type: "Pooling"
  bottom: "x_layer1_2"
  top: "x_layer1_3"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "x_layer2.0_conv"
  type: "Convolution"
  bottom: "x_layer1_3"
  top: "x_layer2_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "x_layer2.1_bn"
  type: "BatchNorm"
  bottom: "x_layer2_0_conv"
  top: "x_layer2_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer2.1_scale"
  type: "Scale"
  bottom: "x_layer2_1_bn"
  top: "x_layer2_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer2_2"
  type: "ReLU"
  bottom: "x_layer2_1_scale"
  top: "x_layer2_2"
}
layer {
  name: "x_layer2.3_conv"
  type: "Convolution"
  bottom: "x_layer2_2"
  top: "x_layer2_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "x_layer2.4_bn"
  type: "BatchNorm"
  bottom: "x_layer2_3_conv"
  top: "x_layer2_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer2.4_scale"
  type: "Scale"
  bottom: "x_layer2_4_bn"
  top: "x_layer2_4_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer2_5"
  type: "ReLU"
  bottom: "x_layer2_4_scale"
  top: "x_layer2_5"
}
layer {
  name: "x_layer2_6"
  type: "Pooling"
  bottom: "x_layer2_5"
  top: "x_layer2_6"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "x_layer3.0_conv"
  type: "Convolution"
  bottom: "x_layer2_6"
  top: "x_layer3_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "x_layer3.1_bn"
  type: "BatchNorm"
  bottom: "x_layer3_0_conv"
  top: "x_layer3_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer3.1_scale"
  type: "Scale"
  bottom: "x_layer3_1_bn"
  top: "x_layer3_1_scale"
  scale_param {
    bias_term: true
  }
}


layer {
  name: "x_layer3_2"
  type: "ReLU"
  bottom: "x_layer3_1_scale"
  top: "x_layer3_2"
}
layer {
  name: "x_layer3.3_conv"
  type: "Convolution"
  bottom: "x_layer3_2"
  top: "x_layer3_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "x_layer3.4_bn"
  type: "BatchNorm"
  bottom: "x_layer3_3_conv"
  top: "x_layer3_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer3.4_scale"
  type: "Scale"
  bottom: "x_layer3_4_bn"
  top: "x_layer3_4_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer3_5"
  type: "ReLU"
  bottom: "x_layer3_4_scale"
  top: "x_layer3_5"
}
layer {
  name: "x_layer3_6"
  type: "Pooling"
  bottom: "x_layer3_5"
  top: "x_layer3_6"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "x_layer4.0_conv"
  type: "Convolution"
  bottom: "x_layer3_6"
  top: "x_layer4_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "x_layer4.1_bn"
  type: "BatchNorm"
  bottom: "x_layer4_0_conv"
  top: "x_layer4_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer4.1_scale"
  type: "Scale"
  bottom: "x_layer4_1_bn"
  top: "x_layer4_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer4_2"
  type: "ReLU"
  bottom: "x_layer4_1_scale"
  top: "x_layer4_2"
}
layer {
  name: "x_layer4.3_conv"
  type: "Convolution"
  bottom: "x_layer4_2"
  top: "x_layer4_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "x_layer4.4_bn"
  type: "BatchNorm"
  bottom: "x_layer4_3_conv"
  top: "x_layer4_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "x_layer4.4_scale"
  type: "Scale"
  bottom: "x_layer4_4_bn"
  top: "x_layer4_4_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "x_layer4_5"
  type: "ReLU"
  bottom: "x_layer4_4_scale"
  top: "x_layer4_5"
}
layer {
  name: "x_layer4.6_conv"
  type: "Convolution"
  bottom: "x_layer4_5"
  top: "x_layer4_6_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "x_layer4_7"
  type: "ReLU"
  bottom: "x_layer4_6_conv"
  top: "x_layer4_7"
}
layer {
  name: "x_layer4_8"
  type: "Pooling"
  bottom: "x_layer4_7"
  top: "x_layer4_8"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "s_layer1.0_conv"
  type: "Convolution"
  bottom: "data"
  top: "s_layer1_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer1.1_bn"
  type: "BatchNorm"
  bottom: "s_layer1_0_conv"
  top: "s_layer1_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer1.1_scale"
  type: "Scale"
  bottom: "s_layer1_1_bn"
  top: "s_layer1_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer1_2"
  type: "TanH"
  bottom: "s_layer1_1_scale"
  top: "s_layer1_2"
}
layer {
  name: "s_layer1_3"
  type: "Pooling"
  bottom: "s_layer1_2"
  top: "s_layer1_3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "s_layer2.0_conv"
  type: "Convolution"
  bottom: "s_layer1_3"
  top: "s_layer2_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer2.1_bn"
  type: "BatchNorm"
  bottom: "s_layer2_0_conv"
  top: "s_layer2_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer2.1_scale"
  type: "Scale"
  bottom: "s_layer2_1_bn"
  top: "s_layer2_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer2_2"
  type: "TanH"
  bottom: "s_layer2_1_scale"
  top: "s_layer2_2"
}
layer {
  name: "s_layer2.3_conv"
  type: "Convolution"
  bottom: "s_layer2_2"
  top: "s_layer2_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer2.4_bn"
  type: "BatchNorm"
  bottom: "s_layer2_3_conv"
  top: "s_layer2_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer2.4_scale"
  type: "Scale"
  bottom: "s_layer2_4_bn"
  top: "s_layer2_4_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer2_5"
  type: "TanH"
  bottom: "s_layer2_4_scale"
  top: "s_layer2_5"
}
layer {
  name: "s_layer2_6"
  type: "Pooling"
  bottom: "s_layer2_5"
  top: "s_layer2_6"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "s_layer3.0_conv"
  type: "Convolution"
  bottom: "s_layer2_6"
  top: "s_layer3_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer3.1_bn"
  type: "BatchNorm"
  bottom: "s_layer3_0_conv"
  top: "s_layer3_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer3.1_scale"
  type: "Scale"
  bottom: "s_layer3_1_bn"
  top: "s_layer3_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer3_2"
  type: "TanH"
  bottom: "s_layer3_1_scale"
  top: "s_layer3_2"
}
layer {
  name: "s_layer3.3_conv"
  type: "Convolution"
  bottom: "s_layer3_2"
  top: "s_layer3_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer3.4_bn"
  type: "BatchNorm"
  bottom: "s_layer3_3_conv"
  top: "s_layer3_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer3.4_scale"
  type: "Scale"
  bottom: "s_layer3_4_bn"
  top: "s_layer3_4_scale"
  scale_param {
    bias_term: true
  }
}


layer {
  name: "s_layer3_5"
  type: "TanH"
  bottom: "s_layer3_4_scale"
  top: "s_layer3_5"
}
layer {
  name: "s_layer3_6"
  type: "Pooling"
  bottom: "s_layer3_5"
  top: "s_layer3_6"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "s_layer4.0_conv"
  type: "Convolution"
  bottom: "s_layer3_6"
  top: "s_layer4_0_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "s_layer4.1_bn"
  type: "BatchNorm"
  bottom: "s_layer4_0_conv"
  top: "s_layer4_1_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer4.1_scale"
  type: "Scale"
  bottom: "s_layer4_1_bn"
  top: "s_layer4_1_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer4_2"
  type: "TanH"
  bottom: "s_layer4_1_scale"
  top: "s_layer4_2"
}
layer {
  name: "s_layer4.3_conv"
  type: "Convolution"
  bottom: "s_layer4_2"
  top: "s_layer4_3_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "s_layer4.4_bn"
  type: "BatchNorm"
  bottom: "s_layer4_3_conv"
  top: "s_layer4_4_bn"
  batch_norm_param {
    use_global_stats: true
    eps: 9.999999747378752e-06
  }
}
layer {
  name: "s_layer4.4_scale"
  type: "Scale"
  bottom: "s_layer4_4_bn"
  top: "s_layer4_4_scale"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "s_layer4_5"
  type: "TanH"
  bottom: "s_layer4_4_scale"
  top: "s_layer4_5"
}
layer {
  name: "s_layer4.6_conv"
  type: "Convolution"
  bottom: "s_layer4_5"
  top: "s_layer4_6_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "s_layer4_7"
  type: "TanH"
  bottom: "s_layer4_6_conv"
  top: "s_layer4_7"
}
layer {
  name: "s_layer4_8"
  type: "Pooling"
  bottom: "s_layer4_7"
  top: "s_layer4_8"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "feat_s1_pre"
  type: "Eltwise"
  bottom: "x_layer4_8"
  bottom: "s_layer4_8"
  top: "feat_s1_pre"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "feat_delta_s1.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s1_pre"
  top: "feat_delta_s1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_delta_s1_1"
  type: "TanH"
  bottom: "feat_delta_s1_0"
  top: "feat_delta_s1_1"
}
layer {
  name: "delta_s1.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_delta_s1_1"
  top: "delta_s1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "delta_s1_1"
  type: "TanH"
  bottom: "delta_s1_0"
  top: "delta_s1_1"
}
layer {
  name: "feat_local_s1.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s1_pre"
  top: "feat_local_s1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_local_s1_1"
  type: "TanH"
  bottom: "feat_local_s1_0"
  top: "feat_local_s1_1"
}
layer {
  name: "local_s1.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_local_s1_1"
  top: "local_s1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "local_s1_1"
  type: "TanH"
  bottom: "local_s1_0"
  top: "local_s1_1"
}
layer {
  name: "feat_pred_s1.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s1_pre"
  top: "feat_pred_s1_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 9
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_pred_s1_1"
  type: "ReLU"
  bottom: "feat_pred_s1_0"
  top: "feat_pred_s1_1"
}
layer {
  name: "feat_pred_s1_reshape"
  type: "Reshape"
  bottom: "feat_pred_s1_1"
  top: "pred_a_s1"
  reshape_param {
    shape {
      dim: -1
      dim: 3
      dim: 3
    }
  }
}
layer {
  name: "x_layer3t.0_conv"
  type: "Convolution"
  bottom: "x_layer3_6"
  top: "x_layer3t_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "x_layer3t_1"
  type: "ReLU"
  bottom: "x_layer3t_0"
  top: "x_layer3t_1"
}
layer {
  name: "x_layer3t_2"
  type: "Pooling"
  bottom: "x_layer3t_1"
  top: "x_layer3t_2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "s_layer3t.0_conv"
  type: "Convolution"
  bottom: "s_layer3_6"
  top: "s_layer3t_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "s_layer3t_1"
  type: "TanH"
  bottom: "s_layer3t_0"
  top: "s_layer3t_1"
}
layer {
  name: "s_layer3t_2"
  type: "Pooling"
  bottom: "s_layer3t_1"
  top: "s_layer3t_2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "feat_s2_pre"
  type: "Eltwise"
  bottom: "x_layer3t_2"
  bottom: "s_layer3t_2"
  top: "feat_s2_pre"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "feat_delta_s2.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s2_pre"
  top: "feat_delta_s2_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_delta_s2_1"
  type: "TanH"
  bottom: "feat_delta_s2_0"
  top: "feat_delta_s2_1"
}
layer {
  name: "delta_s2.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_delta_s2_1"
  top: "delta_s2_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "delta_s2_1"
  type: "TanH"
  bottom: "delta_s2_0"
  top: "delta_s2_1"
}
layer {
  name: "feat_local_s2.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s2_pre"
  top: "feat_local_s2_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_local_s2_1"
  type: "TanH"
  bottom: "feat_local_s2_0"
  top: "feat_local_s2_1"
}
layer {
  name: "local_s2.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_local_s2_1"
  top: "local_s2_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "local_s2_1"
  type: "TanH"
  bottom: "local_s2_0"
  top: "local_s2_1"
}
layer {
  name: "feat_pred_s2.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s2_pre"
  top: "feat_pred_s2_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 9
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_pred_s2_1"
  type: "ReLU"
  bottom: "feat_pred_s2_0"
  top: "feat_pred_s2_1"
}
layer {
  name: "feat_pred_s2_reshape"
  type: "Reshape"
  bottom: "feat_pred_s2_1"
  top: "pred_a_s2"
  reshape_param {
    shape {
      dim: -1
      dim: 3
      dim: 3
    }
  }
}
layer {
  name: "x_layer2t.0_conv"
  type: "Convolution"
  bottom: "x_layer2_6"
  top: "x_layer2t_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "x_layer2t_1"
  type: "ReLU"
  bottom: "x_layer2t_0"
  top: "x_layer2t_1"
}
layer {
  name: "x_layer2t_2"
  type: "Pooling"
  bottom: "x_layer2t_1"
  top: "x_layer2t_2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "s_layer2t.0_conv"
  type: "Convolution"
  bottom: "s_layer2_6"
  top: "s_layer2t_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "s_layer2t_1"
  type: "TanH"
  bottom: "s_layer2t_0"
  top: "s_layer2t_1"
}
layer {
  name: "s_layer2t_2"
  type: "Pooling"
  bottom: "s_layer2t_1"
  top: "s_layer2t_2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "feat_s3_pre"
  type: "Eltwise"
  bottom: "x_layer2t_2"
  bottom: "s_layer2t_2"
  top: "feat_s3_pre"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "feat_delta_s3.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s3_pre"
  top: "feat_delta_s3_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_delta_s3_1"
  type: "TanH"
  bottom: "feat_delta_s3_0"
  top: "feat_delta_s3_1"
}
layer {
  name: "delta_s3.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_delta_s3_1"
  top: "delta_s3_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "delta_s3_1"
  type: "TanH"
  bottom: "delta_s3_0"
  top: "delta_s3_1"
}
layer {
  name: "feat_local_s3.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s3_pre"
  top: "feat_local_s3_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_local_s3_1"
  type: "TanH"
  bottom: "feat_local_s3_0"
  top: "feat_local_s3_1"
}
layer {
  name: "local_s3.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_local_s3_1"
  top: "local_s3_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "local_s3_1"
  type: "TanH"
  bottom: "local_s3_0"
  top: "local_s3_1"
}
layer {
  name: "feat_pred_s3.0_innerproduct"
  type: "InnerProduct"
  bottom: "feat_s3_pre"
  top: "feat_pred_s3_0"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 9
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "feat_pred_s3_1"
  type: "ReLU"
  bottom: "feat_pred_s3_0"
  top: "feat_pred_s3_1"
}
layer {
  name: "feat_pred_s3_reshape"
  type: "Reshape"
  bottom: "feat_pred_s3_1"
  top: "pred_a_s3"
  reshape_param {
    shape {
      dim: -1
      dim: 3
      dim: 3
    }
  }
}
